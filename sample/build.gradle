buildscript {    // Configuration for building
    repositories {
        mavenCentral()
        flatDir {
            dirs 'libs'
        }
    }
}

plugins {
    id 'application'
    id 'com.google.cloud.artifactregistry.gradle-plugin' version '2.1.5'
}

repositories {   // repositories for Jar's you access in your code
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
    }
    mavenCentral()
    maven {
        url "artifactregistry://us-maven.pkg.dev/fleetengine-gapic/maven"
    }
}

application {
    mainClassName = "com.google.fleetengine.auth.sample.SampleApp"
    applicationDefaultJvmArgs = ['-Djava.util.logging.config.file=logging.properties']
}

test {

}

run {
    systemProperties System.getProperties()
    standardInput = System.in
}

sourceSets.all {
  configurations.getByName(runtimeClasspathConfigurationName) {
    attributes.attribute(Attribute.of("org.gradle.jvm.environment", String), "standard-jvm")
  }
  configurations.getByName(compileClasspathConfigurationName) {
    attributes.attribute(Attribute.of("org.gradle.jvm.environment", String), "standard-jvm")
  }
}
dependencies {
    annotationProcessor 'com.google.auto.value:auto-value:1.6.2'

    implementation 'com.google.api:gax:1.65.1'
    implementation 'com.google.api:gax-grpc:1.65.1'

    implementation 'com.google.maps:gapic-google-maps-fleetengine-v1-java:0.0.3231'
    implementation 'com.google.maps:gapic-google-maps-fleetengine-delivery-v1-java:0.0.3231'
    implementation project(':fleetengine-auth')

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'com.google.truth:truth:1.1+'
    testImplementation 'org.mockito:mockito-core:3+'
}
