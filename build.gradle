buildscript {    // Configuration for building
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'java'                              // standard Java tasks

def props = new Properties()
file("version.properties").withInputStream { props.load(it) }

group 'com.google.maps'
version props.libVersion
ext.artifactId = 'fleetengine-auth'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {   // repositories for Jar's you access in your code
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
    }
    mavenCentral()
}

publishing {
    publications {
        authLib(MavenPublication) {
            pom {
                name = 'Fleet Engine Auth Library'
                description = 'Provides a set of tools to simplify the Fleet Engine setup process.'
                url = 'https://github.com/googlemaps/java-fleetengine-auth'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                organization {
                    name = 'Google, Inc.'
                    url = 'http://www.google.com'
                }
                issueManagement {
                    system = 'GitHub Issues'
                    url = 'http://github.com/googlemaps/java-fleetengine-auth/issues'
                }
                scm {
                    connection = 'scm:git:git://github.com/googlemaps/java-fleetengine-auth.git'
                    developerConnection = 'scm:git:ssh://github.com/googlemaps/java-fleetengine-auth.git'
                    url = 'http://github.com/googlemaps/java-fleetengine-auth/'
                    tag = 'HEAD'
                }
                developers {
                    developer {
                        id = 'danielfbright'
                        name = 'Daniel Bright'
                    }
                }
            }
            groupId group
            artifactId project.ext.artifactId
            version version
            from components.java
        }
    }
    repositories {
        maven {
            name = "mavencentral"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

dependencies {
    compile 'jstl:jstl:1.2'

    annotationProcessor 'com.google.auto.value:auto-value:1.6.2'

    // Add dependencies here
    implementation 'com.auth0:java-jwt:3.10.2'
    implementation 'com.google.api:gax:1.65.1'
    implementation 'com.google.api:gax-grpc:1.65.1'
    implementation 'com.google.auth:google-auth-library-oauth2-http:0.26.0'
    implementation 'com.google.auto.value:auto-value-annotations:1.6.2'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'javax.annotation:javax.annotation-api:1.2'
    implementation 'io.grpc:grpc-core:1.9.1'

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'com.google.truth:truth:1.1'
    testImplementation 'org.mockito:mockito-core:3.12.4'
}

signing {
    sign publishing.publications.authLib
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

java {
    withJavadocJar()
    withSourcesJar()
}


compileJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'
